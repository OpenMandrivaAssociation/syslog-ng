@version:3.2

# vim:ft=conf:ai:si:ts=8:sw=8:et:
#
# syslog-ng configuration file.
#
# See syslog-ng(8) and syslog-ng.conf(5) for more information.
#

# Options
options {
	flush_lines (0);
	time_reopen (10);
	log_fifo_size (1000);
	long_hostnames (off);
	use_dns (no);
	use_fqdn (no);
	keep_hostname (yes);

	create_dirs (yes);
	owner ("root");
	group ("adm");
	perm (0640);
	dir_owner ("root");
	dir_group ("adm");
	dir_perm (0755);
};

# Sources
source s_sys {
	file ("/proc/kmsg" program_override("kernel: "));
	unix-stream ("/dev/log");
	internal();
	# udp(ip(0.0.0.0) port(514));
};

# Sensible stuff
destination d_auth		{ file("/var/log/auth.log"); };

# Generic stuff
destination d_messages		{ file("/var/log/messages"); };
destination d_syslog		{ file("/var/log/syslog"); };
destination d_user		{ file("/var/log/user.log"); };

# Mail logging
destination d_mailinfo		{ file("/var/log/mail/info.log"); };
destination d_mailwarn		{ file("/var/log/mail/warnings.log"); };
destination d_mailerr		{ file("/var/log/mail/errors.log"); };

# Cron logging
destination d_croninfo		{ file("/var/log/cron/info.log"); };
destination d_cronwarn		{ file("/var/log/cron/warnings.log"); };
destination d_cronerr		{ file("/var/log/cron/errors.log"); };

# Kernel logging
destination d_kerninfo		{ file("/var/log/kernel/info.log"); };
destination d_kernwarn		{ file("/var/log/kernel/warnings.log"); };
destination d_kernerr		{ file("/var/log/kernel/errors.log"); };

# Daemons logging
destination d_daemoninfo	{ file("/var/log/daemons/info.log"); };
destination d_daemonwarn	{ file("/var/log/daemons/warnings.log"); };
destination d_daemonerr		{ file("/var/log/daemons/errors.log"); };

# Drakxtools logging
destination d_drakxtools  	{ file("/var/log/drakxtools.log"); };

# Boot messages logging
destination d_boot		{ file("/var/log/boot.log"); };

# Emergency messages for logged users
destination d_emergall		{ usertty("*"); };

# All messages on last terminal
destination d_consoleall	{ file("/dev/tty12"); };

# Generic filters
filter f_info		{ level(debug,info,notice); };
filter f_warn		{ level(warn); };
filter f_err		{ level(err..emerg); };
filter f_emergency	{ level(emerg); };
filter f_mail		{ facility(mail); };
filter f_cron		{ facility(cron); };
filter f_kernel		{ facility(kern); };
filter f_daemon		{ facility(daemon); };

# Specific filters
filter f_auth		{ facility(auth,authpriv); };
filter f_messages	{ level(info..emerg) and not facility(mail,news,authpriv); };
filter f_syslog		{ not facility(auth, authpriv); };
filter f_user		{ facility(user); };
filter f_drakxtools	{ facility(local1); };
filter f_boot		{ facility(local7); };

# Log to logfiles
log { filter(f_auth);			destination(d_auth);		flags(catch-all); };
log { filter(f_messages);		destination(d_messages);	flags(catch-all); };
log { filter(f_syslog);			destination(d_syslog);		flags(catch-all); };
log { filter(f_user);			destination(d_user);		flags(catch-all); };
log { filter(f_mail); filter(f_info);	destination(d_mailinfo);	flags(catch-all); };
log { filter(f_mail); filter(f_warn);	destination(d_mailwarn);	flags(catch-all); };
log { filter(f_mail); filter(f_err);	destination(d_mailerr);		flags(catch-all); };
log { filter(f_cron); filter(f_info);	destination(d_croninfo);	flags(catch-all); };
log { filter(f_cron); filter(f_warn);	destination(d_cronwarn);	flags(catch-all); };
log { filter(f_cron); filter(f_err);	destination(d_cronerr);		flags(catch-all); };
log { filter(f_kernel); filter(f_info);	destination(d_kerninfo);	flags(catch-all); };
log { filter(f_kernel); filter(f_warn);	destination(d_kernwarn);	flags(catch-all); };
log { filter(f_kernel); filter(f_err);	destination(d_kernerr);		flags(catch-all); };
log { filter(f_daemon); filter(f_info);	destination(d_daemoninfo);	flags(catch-all); };
log { filter(f_daemon); filter(f_warn);	destination(d_daemonwarn);	flags(catch-all); };
log { filter(f_daemon); filter(f_err);	destination(d_daemonerr);	flags(catch-all); };
log { filter(f_boot);			destination(d_boot);		flags(catch-all); };
log { filter(f_drakxtools);		destination(d_drakxtools);	flags(catch-all); };

# Log to console
log { filter(f_emergency);		destination(d_emergall);	flags(catch-all); };
log { 					destination(d_consoleall);	flags(catch-all); };

# Extra includes
include "/etc/syslog-ng/syslog-ng.d";

